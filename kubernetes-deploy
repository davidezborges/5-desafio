apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    selector:
      io.kompose.service: backend
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    selector:
      io.kompose.service: frontend
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: backend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/craftech-net: "true"
          io.kompose.service: backend
      spec:
        containers:
        - env:
          - name: DB_ENGINE
            value: '"postgresql"'
          - name: DB_HOST
            value: 127.0.0.1:5432
          - name: DB_NAME
            value: craftech
          - name: DB_PASS
            value: craftech
          - name: DB_PORT
            value: "5432"
          - name: DB_USER
            value: craftech
          - name: SECRET_KEY
            value: '''5vUCOVMkF2JNhH2CmzY4BnhDiiUtv+reNq2wwxbw31E='''
          image: backend
          imagePullPolicy: ""
          name: backend
          ports:
          - containerPort: 8000
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: craftech-net
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/craftech-net: "true"
    podSelector:
      matchLabels:
        io.kompose.network/craftech-net: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: db
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/craftech-net: "true"
          io.kompose.service: db
      spec:
        containers:
        - env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
          - name: POSTGRES_PASSWORD
            value: craftech
          image: postgres:13.2-alpine
          imagePullPolicy: ""
          name: db
          ports:
          - containerPort: 5432
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: craftech-net
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/craftech-net: "true"
    podSelector:
      matchLabels:
        io.kompose.network/craftech-net: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: frontend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetes-deploy
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/craftech-net: "true"
          io.kompose.service: frontend
      spec:
        containers:
        - image: frontend
          imagePullPolicy: ""
          name: frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: craftech-net
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/craftech-net: "true"
    podSelector:
      matchLabels:
        io.kompose.network/craftech-net: "true"
kind: List
metadata: {}

